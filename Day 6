# 복습

# Main
  package com.lx.review;
  
  import com.lx.animal.Animal;
  import com.lx.animal.Cat;
  import com.lx.animal.Dog;
  import com.lx.animal.Farm;
  
  public class Test {
  
  	public static void main(String[] args) {
  		
  		// 변수상자
  		String name;
  		int age;
  		
  		name = "홍길동1";
  		age = 21;
  		
  		String name2 = "홍길동2";
  		
  		// 함수상자 실행 
  		int result = Test.add(10, 10);
  		System.out.println("더하기 결과 : " + result);
  		
  		// 붕어빵 틀에서 붕어빵 찍어내기
  		Farm farm1= new Farm();
  		
  		Dog dog1 = new Dog("강아지1", 1);
  		farm1.animals.add(dog1);
  		
  		Dog dog2 = new Dog("강아지2", 2);
  		farm1.animals.add(dog2);
  		
  		System.out.println("찍어낸 강아지 마리 수 : " + Dog.count);
  		
  		Cat cat1 = new Cat("고양이1", 1);
  		farm1.animals.add(cat1);
  		
  		System.out.println("찍어낸 동물 수 : " + farm1.animals.size());
  		
  		int dogCount = 0;
  		int catCount = 0;
  		
  		for (int i = 0 ; i < farm1.animals.size(); i++) {
  			Animal animal = farm1.animals.get(i);
  			if (animal instanceof Dog) { // instance : 객체를 의미함.
  				System.out.println("인덱스 " + i + " : " + "강아지");
  				dogCount = dogCount + 1;
  			} else if (animal instanceof Cat) {
  				System.out.println("인덱스 " + i + " : " + "고양이");
  				catCount = catCount +1;
  			}
  			
  		}
  		
  		System.out.println("농장 안에 있는 강아지 마리 수 : " + dogCount + ", 고양이 마리 수 : " + catCount);
  		farm1.animals.getClass();
  
  	}
  	
  	// 함수상자 정의
  	static int add(int a, int b) {
  		int result = a + b;
  		return result;
  	}
  
  }

  

# Dog
  package com.lx.animal;
  
  // 클래스 : 붕어빵 틀
  public class Dog extends Animal{
  	
  	// 클래스 변수 : 붕어빵 틀에 붙어있는 진짜 변수상자
  	// 클래스 이름.변수상자 이름 --> Dog.count 어디서든 사용할 수 있다.
  	static public int count = 0;
  	
  	String name; // '속성' 이라고도 부름.
  	int age;
  	
  	// 생성자 함수(메서드, method) : 붕어빵 틀에서 붕어빵을 찍어낼 때 자도응로 실행되는 함수
  	public Dog(String name, int age) {
  		this.name = name;
  		this.age = age;
  		
  		Dog.count = Dog.count + 1;
  	}
  
  }


# Cat
  package com.lx.animal;
  
  public class Cat extends Animal{
  	
  	String name;
  	int age;
  	
  	public Cat(String name, int age) {
  		this.name = name;
  		this.age = age;
  	}
  
  }


# Animal
  package com.lx.animal;
  
  public class Animal {
  
  }


# Farm
  package com.lx.animal;
  
  import java.util.ArrayList;
  
  public class Farm {
  	
  	String name;
  	
  	// 리스트 //
  	public ArrayList<Animal> animals = new ArrayList<Animal>();
  
  }

# Test
  import com.lx.animal.Cat;
  import com.lx.animal.Dog;
  import com.lx.animal.Farm;
  import com.lx.animal.IAnimal;
  
  public class Test {
  
  	public static void main(String[] args) {
  		
  		// 강아지와 고양이 만들어서 리스트에 넣기
  		Farm farm1 = new Farm();
  		
  		Dog dog1= new Dog();
  		farm1.animals.add(dog1);
  		
  		Dog dog2 = new Dog();
  		farm1.animals.add(dog2);
  		
  		Cat cat1 = new Cat();
  		farm1.animals.add(cat1);
  
  		for (int i = 0 ; i < farm1.animals.size(); i++) {
  			IAnimal animal = farm1.animals.get(i);
  			animal.run();
  		}
  		System.out.println(farm1.animals.get(2));
  	}
  
  }

# Cat
  package com.lx.animal;
  
  public class Cat implements IAnimal{
  	
  	public void run(){
  		System.out.println("고양이가 뛰어갑니다.");
  	}
  
  }

# Dog
  package com.lx.animal;
  
  public class Dog implements IAnimal{
  	
  	
  	
  	public void run() {
  		System.out.println("강아지가 뛰어갑니다.");
  	}
  
  }

# IAnimal
  package com.lx.animal;
  
  public interface IAnimal {
  	
  	public void run();
  	
  	//public void walk(int speed);
  
  }

# Farm
  package com.lx.animal;
  
  import java.util.ArrayList;
  
  public class Farm {
  	
  	public ArrayList <IAnimal> animals = new ArrayList<IAnimal>();
  
  }

## Test12
# Main

  import java.text.SimpleDateFormat;
  import java.util.Calendar;
  import java.util.Date;
  import java.util.HashMap;
  
  import com.lx.animal.BabyDog;
  import com.lx.animal.Cat;
  import com.lx.animal.Dog;
  import com.lx.animal.Farm;
  import com.lx.animal.IAnimal;
  
  public class Test {
  
  	public static void main(String[] args) {
  		
  		// 강아지와 고양이 만들어서 리스트에 넣기
  		Farm farm1 = new Farm();
  		
  		Dog dog1= new BabyDog();
  		farm1.animals.add(dog1);
  		
  		Dog dog2 = new BabyDog();
  		farm1.animals.add(dog2);
  		
  		Cat cat1 = new Cat() {
  			public void walk(int speed) {
  				System.out.println("고양이가 걸어갑니다.");
  			}
  		};
  		farm1.animals.add(cat1);
  		
  		IAnimal animal1 = new IAnimal() {
  			public void run() {
  				System.out.println("동물이 뛰어갑니다.");
  				
  			}
  			public void walk(int speed) {
  				System.out.println("동물이 걸어갑니다.");
  			}
  		};
  		farm1.animals.add(animal1);
  		
  		
  		// 리스트 안에 들어있는 모든 아이템(원소, Element)을 꺼내와서 run 함수 실행하기
  		
  		// for문의 형태 : C-스타일 for 문
  		for (int i = 0 ; i < farm1.animals.size(); i++) {
  			IAnimal animal = farm1.animals.get(i);
  			animal.run();
  		}
  		
  		// for문의 형태 : 축약된 형태
  		for(IAnimal animal : farm1.animals ) {
  			animal.run();
  		}
  		
  		// 해시에 넣기
  		
  		HashMap <String,IAnimal> hash1 = new HashMap<String,IAnimal>();
  		
  		hash1.put("dog1", dog1);
  		hash1.put("dog2", dog2);
  		hash1.put("cat1", cat1);
  		
  		System.out.println("dog1이라는 이름으로 들어간 강아지 : " + hash1.get("dog1"));
  		
  		for(String key : hash1.keySet()) {
  			System.out.println("키 : " + key + ", 값 : " + hash1.get(key));
  		}
  		
  		// 날짜 확인하기
  		Date date1 = new Date();
  		System.out.println("지금 이 순간 : " + date1.getTime());
  		System.out.println("지금 이 순간 : " + date1);
  		
  		SimpleDateFormat format1 = new SimpleDateFormat("YYYY-MM-dd HH:mm:ss");
  		String now = format1.format(date1);
  		System.out.println("지금 이 순간 : " + now);
  		
  		SimpleDateFormat format2 = new SimpleDateFormat("YYYY-MM-dd");
  		String today = format2.format(date1);
  		System.out.println("오늘 : " + today);
  		
  		// 2024-07-08 14:49:32
  		
  		Calendar calendar = Calendar.getInstance();
  		calendar.setTime(date1);
  		
  		calendar.add(Calendar.DATE, -1);
  		
  		String yesterday = format2.format(calendar.getTime());
  		System.out.println("어제 : "+ yesterday);
  		
  		
  		
  	}
  
  }

# Dog
  package com.lx.animal;
  
  public abstract class Dog implements IAnimal{
  	
  	
  	
  	public void run() {
  		System.out.println("강아지가 뛰어갑니다.");
  	}
  
  }

# Cat

  package com.lx.animal;
  
  public abstract class Cat implements IAnimal{
  	
  	public void run(){
  		System.out.println("고양이가 뛰어갑니다.");
  	}
  
  }

# IAnimal
  package com.lx.animal;
  
  public interface IAnimal {
  	
  	public void run();
  	
  	public void walk(int speed);
  
  }

# Farm
  package com.lx.animal;
  
  import java.util.ArrayList;
  
  public class Farm {
  	
  	public ArrayList <IAnimal> animals = new ArrayList<IAnimal>();
  
  }

# BabyDog
  package com.lx.animal;
  
  public class BabyDog extends Dog {
  	
  	public void walk(int speed){
  		System.out.println("강아지가 걸어갑니다.");
  	}
  
  }












